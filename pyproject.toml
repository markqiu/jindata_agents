[tool.poetry]
name = "jindata-agents"
version = "0.1.0"
description = "finance agents for data retrieve, transform, format, and so on."
authors = ["markqiu <qiucheng@jinniuai.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
crewai = {version = "^0.19.0", extras = ["tools"], python =  ">=3.10,<=3.13"}
matplotlib = "^3.8.3"
quickfs = "^0.1.1"
finvizfinance = "^0.14.7"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.6.2"
pytest = "^8.1.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version = ["py310"]
line-length = 200
skip-string-normalization = true

[tool.ruff]
target-version = "py37"
line-length = 200
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
  "T201",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.isort]
known-first-party = ["jindata_agents"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]
